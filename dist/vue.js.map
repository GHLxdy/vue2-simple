{"version":3,"file":"vue.js","sources":["../src/compiler/generate.js","../src/compiler/parser.js","../src/compiler/index.js","../src/utils.js","../src/observe/array.js","../src/observe/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["const defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{aaaaa}}\r\n\r\nfunction genProps(attrs) {\r\n  // [{name:'xxx',value:'xxx'},{name:'xxx',value:'xxx'}]}\r\n  let str = \"\"\r\n  for (let i = 0; i < attrs.length; i++) {\r\n    let attr = attrs[i]\r\n    if (attr.name === \"style\") {\r\n      let styleObj = {}\r\n      attr.value.replace(/([^;:]+)\\:([^;:]+)/g, function () {\r\n        styleObj[arguments[1]] = arguments[2]\r\n      })\r\n      attr.value = styleObj\r\n    }\r\n\r\n    str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n  }\r\n  return `${str.slice(0, -1)}`\r\n}\r\n\r\nfunction gen(el) {\r\n  if (el.type == 1) {\r\n    // 如果是元素，则递归\r\n    return generate(el)\r\n  } else {\r\n    let text = el.text\r\n    if (!defaultTagRE.test(text)) {\r\n      return `_v(\"${text}\")`\r\n    } else {\r\n      // hello {{ name }} world => 'hello' + arr + 'world'\r\n      let tokens = []\r\n      let match\r\n      let lastIndex = 0\r\n      defaultTagRE.lastIndex = 0 // 和css-loader原理一样\r\n      while ((match = defaultTagRE.exec(text))) {\r\n        let index = match.index\r\n        if (index > lastIndex) {\r\n          tokens.push(JSON.stringify(text.slice(lastIndex, index)))\r\n        }\r\n        tokens.push(match[1].trim())\r\n        lastIndex = index + match[0].length\r\n      }\r\n      if (lastIndex < text.length) {\r\n        tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n      }\r\n      return `_v(${tokens.join(\"+\")})`\r\n    }\r\n  }\r\n}\r\n\r\nfunction genChildren(el) {\r\n  let children = el.children // 获取儿子\r\n  if (children) {\r\n    return children.map(c => gen(c)).join(\",\")\r\n  }\r\n  return false\r\n}\r\n\r\nexport function generate(el) {\r\n  // _c('div',{id:'app',a:1},_c('span',{},'world'),_v())\r\n\r\n  // 遍历树 将树拼接成字符串\r\n  let children = genChildren(el)\r\n  let code = `_c('${el.tag}',${\r\n    el.attrs.length ? genProps(el.attrs) : undefined\r\n  }${children ? `,${children}` : \"\"})`\r\n\r\n  return code\r\n}\r\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*` // 标签名\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})` //  用来获取的标签名的 match后的索引为1的\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) // 匹配开始标签的\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`) // 匹配闭合标签的\r\nconst attribute =\r\n  /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // a=b  a=\"b\"  a='b'\r\nconst startTagClose = /^\\s*(\\/?)>/ //     />   <div/>\r\n\r\n// html字符串解析成 对应的脚本来触发 tokens  <div id=\"app\"> {{name}}</div>\r\n// 将解析后的结果 组装成一个树结构  栈\r\nfunction createAstElement(tagName, attrs) {\r\n  return {\r\n    tag: tagName,\r\n    type: 1,\r\n    children: [],\r\n    attrs\r\n  }\r\n}\r\n\r\nlet root = null\r\nlet stack = []\r\nfunction start(tagName, attributes) {\r\n  let parent = stack[stack.length - 1]\r\n  let element = createAstElement(tagName, attributes)\r\n  if (!root) {\r\n    root = element\r\n  }\r\n  if (parent) {\r\n    element.parent = parent\r\n    parent.children.push(element)\r\n  }\r\n  stack.push(element)\r\n}\r\nfunction end(tagName) {\r\n  let last = stack.pop()\r\n  if (last.tag !== tagName) {\r\n    throw new Error(\"标签有误\")\r\n  }\r\n}\r\n\r\nfunction chars(text) {\r\n  text = text.replace(/\\s/g, \"\")\r\n  let parent = stack[stack.length - 1]\r\n  if (text) {\r\n    parent.children.push({\r\n      type: 3,\r\n      text\r\n    })\r\n  }\r\n}\r\n\r\nexport function parseHTML(html) {\r\n  function advance(len) {\r\n    html = html.substring(len)\r\n  }\r\n  function parseStartTag() {\r\n    const start = html.match(startTagOpen) // 匹配开始标签\r\n    if (start) {\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: []\r\n      }\r\n      advance(start[0].length)\r\n      let end\r\n      let attr\r\n      // 如果没有遇到标签结尾就不停解析\r\n      while (\r\n        !(end = html.match(startTagClose)) &&\r\n        (attr = html.match(attribute))\r\n      ) {\r\n        match.attrs.push({\r\n          name: attr[1],\r\n          value: attr[3] || attr[4] || attr[5]\r\n        })\r\n        advance(attr[0].length)\r\n      }\r\n      if (end) {\r\n        advance(end[0].length)\r\n      }\r\n      return match\r\n    }\r\n    return false\r\n  }\r\n  while (html) {\r\n    // 如果解析的内容存在，就不停的解析\r\n    let textEnd = html.indexOf(\"<\") // 解析当前开头\r\n    if (textEnd === 0) {\r\n      const startTagMatch = parseStartTag() // 解析开始标签\r\n\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue\r\n      }\r\n      const endTagMatch = html.match(endTag)\r\n      if (endTagMatch) {\r\n        end(endTagMatch[1])\r\n        advance(endTagMatch[0].length)\r\n        continue\r\n      }\r\n    }\r\n    let text // 123</div>\r\n    if (textEnd > 0) {\r\n      text = html.substring(0, textEnd)\r\n    }\r\n    if (text) {\r\n      chars(text)\r\n      advance(text.length)\r\n    }\r\n  }\r\n  return root\r\n}\r\n","import { generate } from \"./generate\"\r\nimport { parseHTML } from \"./parser\"\r\n\r\n// 看一下用户是否传入了 , 没传入可能传入的是 template, template如果也没有传递\r\n// 将我们的html =》 词法解析  （开始标签 ， 结束标签，属性，文本）\r\n// => ast语法树 用来描述html语法的 stack=[]\r\n\r\n// codegen  <div>hello</div>  =>   _c('div',{},'hello')  => 让字符串执行\r\n// 字符串如果转成代码 eval 好性能 会有作用域问题\r\n\r\n// 模板引擎 new Function + with 来实现\r\n\r\n// 将html字符串解析成dom树\r\n\r\nexport function compileToFunction(template) {\r\n  let root = parseHTML(template)\r\n  // html=> ast（只能描述语法 语法不存在的属性无法描述） => render函数 + (with + new Function) => 虚拟dom （增加额外的属性） => 生成真实dom\r\n\r\n  // 生成代码\r\n  let code = generate(root)\r\n\r\n  console.log(code)\r\n  // let render = new Function(`with(this){return ${code}}`) // code 中会用到数据 数据在vm上\r\n  // return render\r\n}\r\n","export function isFunction(val) {\r\n  return typeof val === \"function\";\r\n}\r\n\r\nexport function isObject(val) {\r\n  return typeof val === \"object\" && val !== null;\r\n}\r\n","let oldArrayPrototype = Array.prototype;\r\nexport let arrayMethods = Object.create(Array.prototype);\r\n\r\nlet methods = [\"push\", \"shift\", \"unshift\", \"pop\", \"pop\", \"sort\", \"splice\"];\r\n\r\nmethods.forEach(method => {\r\n  // 对以上7个方法进行重写\r\n  arrayMethods[method] = function (...args) {\r\n    oldArrayPrototype[method].call(this, ...args);\r\n    const ob = this.__ob__;\r\n    let inserted;\r\n    switch (method) {\r\n      case \"push\":\r\n      case \"unshift\":\r\n        inserted = args;\r\n        break;\r\n      case \"splice\":\r\n        inserted = args.slice(2);\r\n      default:\r\n        break;\r\n    }\r\n    // 如果有新增的内容需要进行继续的劫持\r\n    if (inserted) ob.observeArray(inserted);\r\n  };\r\n});\r\n","import { isObject } from \"../utils\";\r\nimport { arrayMethods } from \"./array\";\r\n\r\n// 检测数据的变化\r\nclass Observe {\r\n  constructor(data) {\r\n    data.__ob__ = this;\r\n    Object.defineProperty(data, \"__ob__\", {\r\n      value: this,\r\n      enumerable: false // 不可枚举\r\n    });\r\n    if (Array.isArray(data)) {\r\n      // 数组劫持\r\n      // 对数组中的方法进行 重写（使用高阶函数/切片）\r\n      data.__proto__ = arrayMethods;\r\n      this.observeArray(data);\r\n    } else {\r\n      this.walk(data); // 对象数据劫持\r\n    }\r\n  }\r\n  // 对数组中的数组 和数组中的对象 进行劫持\r\n  observeArray(data) {\r\n    data.forEach(item => {\r\n      observe(item);\r\n    });\r\n  }\r\n  walk(data) {\r\n    Object.keys(data).forEach(key => {\r\n      defineReactive(data, key, data[key]);\r\n    });\r\n  }\r\n}\r\n\r\n// vue2 会将对象进行遍历 将每个属性 用defineProperty 重新定义 =》 性能差\r\nfunction defineReactive(data, key, value) {\r\n  observe(value); // 本身用户默认值是对象嵌套对象， 需进行递归处理\r\n  Object.defineProperty(data, key, {\r\n    get() {\r\n      return value;\r\n    },\r\n    set(newV) {\r\n      observe(newV); // 如果用户赋值一个新对象，需要将这个对象进行劫持\r\n      value = newV;\r\n    }\r\n  });\r\n}\r\n\r\nexport function observe(data) {\r\n  // 如果是对象才观测\r\n  // 默认最外层的data必须是一个对象\r\n  if (!isObject(data)) {\r\n    return;\r\n  }\r\n\r\n  return new Observe(data);\r\n}\r\n","import { observe } from \"./observe/index\";\r\nimport { isFunction } from \"./utils\";\r\n\r\n/**\r\n * 状态初始化\r\n * @param {*} vm\r\n */\r\nexport function initSate(vm) {\r\n  const opts = vm.$options;\r\n  // if (opts.props) {\r\n  //   initProps()\r\n  // }\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n  // if (opts.computed) {\r\n  //   initComputed()\r\n  // }\r\n  // if (opts.watch) {\r\n  //   initWatch()\r\n  // }\r\n}\r\n\r\nfunction proxy(vm, source, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get() {\r\n      return vm[source][key];\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue;\r\n    }\r\n  });\r\n}\r\n\r\nfunction initData(vm) {\r\n  let data = vm.$options.data;\r\n  // vue2中会将data中所有的数据 进行数据劫持 Object.defineProperty\r\n\r\n  data = vm._data = isFunction(data) ? data.call(vm) : data;\r\n\r\n  for (let key in data) {\r\n    proxy(vm, \"_data\", key);\r\n  }\r\n\r\n  observe(data);\r\n}\r\n","import { compileToFunction } from \"./compiler/index\";\r\nimport { initSate } from \"./state\";\r\n\r\n// 在Vue的基础上做一次混合操作\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function (options) {\r\n    const vm = this;\r\n    vm.$options = options;\r\n\r\n    // 对数据进行初始化\r\n    initSate(vm);\r\n\r\n    if (vm.$options.el) {\r\n      // 将数据挂载到这个模板上\r\n      vm.$mount(vm.$options.el);\r\n    }\r\n  };\r\n\r\n  Vue.prototype.$mount = function (el) {\r\n    const vm = this;\r\n    const options = vm.$options;\r\n    el = document.querySelector(el);\r\n\r\n    // 模板=>渲染函数=>虚拟dom vnode => diff算法 => 更新虚拟dom  => 产生真是节点，更新\r\n    if (!options.render) {\r\n      // 没有render用template\r\n      let template = options.template;\r\n      // 没有template,就取el的内容为模板\r\n      if (!template && el) {\r\n        template = el.outerHTML;\r\n        let render = compileToFunction(template);\r\n        options.render = render;\r\n      }\r\n    }\r\n  };\r\n}\r\n","import { initMixin } from \"./init\";\r\n\r\nexport default function Vue(options) {\r\n  this._init(options);\r\n}\r\n// 扩展原型\r\ninitMixin(Vue);\r\n"],"names":[],"mappings":"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"}